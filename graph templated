#include <iostream>
#include <unordered_map>
#include <list>
using namespace std;
template <typename T>
class graph
{
public:
    unordered_map<T, list<T>> adj;
    void addedges(T u, T v, bool direction)
    {

        // direction is 0 then it is undirected graph
        // if direction is 1 then it is directed graph

        // create an edges from u to v 
        adj[u].push_back(v);
        if (direction == 0)
        {
            adj[v].push_back(u);
        }
    }
    void printadjList()
    {
        for (auto i : adj)
        {

            cout << i.first << ": =>";
            for (auto j : i.second)
            {
                cout << j << " ";
            }
            cout << endl;
        }
    }
};
int main()
{
  int n ; 
  cout<<"enter the number of nodes "<<endl; 
  cin >>n; 
  int m ; 
  cout<<"enter the number of edges "<<endl;
  cin>>m; 
  graph<int>g;
  for(int i=0; i<m ;i++){
    int u, v; 
    cin>>u>>v; 
    //this means that we are creating undirected graph
    g.addedges(u,v,0);
  }
  //here we are printing 
  g.printadjList();

    return 0;
}
